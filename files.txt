$? FILESYSTEM

/sbin ## It contains essential binaries for system administration such as parted or ip
/bin ## It contains essential binaries for all users such as ls, mv, or mkdir
/usr/sbin ## It stores binaries for system administration such as deluser, or groupadd
/usr/bin ## It includes most executable files — such as free, pstree, sudo or man — that can be used by all users
/usr/local/sbin ## It is used to store locally installed programs for system administration that are not managed by the system’s package manager
/usr/local/bin ## It serves the same purpose as /usr/local/sbin but for regular user programs
/opt ## sometimes used to store optional third-party application
/home/$USER/bin AND /home/$USER/.local/bin ## regular users can have their own programs in there
/var/log ## Where the logs are, except for some service-specific logs
/boot ## kernel place
/etc ## general configuration files
/home/User ## user-specifig condig files
/proc ## running processes + system hardware
/proc/sys ## kernel configuration
/dev ## connected hardware devices/nodes
/dev/null ## bit bucket: discards all information sent to it

$? FILETYPES

- ## normal file
d ## directory
l ## soft link
b ## block device (storage)
c ## character device (terminal)
s ## socket

$? FILE PERMISSIONS

r ## open files and read content
w ## edit and delete files
x ## run file as executable or script

s ## set gid, on binary executable files only - grant the process resulting from executing the file access to the privileges of the group who owns the file - written ---s------
S ## set gid, not executable by group
s ## set uid, on binary executable files only - grant the process resulting from executing the file access to the privileges of the user who owns the file (ex: a user uses /bin/password belonging to root with root privileges) - written ------s---
S ## set uid, not executable by user

r ## read directory's content, like filenames, but not the files themselves
w ## create or delete file in the directory, change its name, permissions or owner, even without any permission on this file
x ## enter a directory, but not list the files

t ## sticky bit - only root, directory owner and file owner can rename or delete files in the directory, regardless of other permissions - written d--------t
T ## sticky bit, not executable by others
s ## set gid - make every file or directory created under it inherit the group from the parent directory - written d-----s---

chmod u+rw-x,g+rw-x,o+rw-x file ## symbolic mode
chmod -R a=rw- file ## recursive mode, all files inside directory
chmod 666 file ## numeric mode

chmod +t directory ## set sticky bit
chmod 1777 directory ## numeric mode
chmod g+s directory ## give set gid to a directory
chmod 2777 directory ## numeric mode
chmod u+s file ## give set uid to a file
chmod 4777 file ## numeric mode
chmod 3777 directory ## set sticky bit + set gid on directory

chown user file ## changer owner
chown user:group file ## change owner and group
chown :group file ## change group

chgrp group file ## change groupe of file(s)
chgrp - R group directory ## change recursively

#? INODES

## index node is a data structure that stores metadata about a file
## a single inode can have multiple links toward it, i.e. multiple copies of the same file

number after file permissions ## link count, number of hard links to the file or directory
## usually 1 for files
## always 2 for directories (. and ..)

#? TIMESTAMPS

touch file ## if file exists, updates time stamps: last access time (atime), last content modification (mtime) time and last metadata change time (not birth time date)
touch -a file ## change only access and change time
touch -m file ## change only modification and change time

stat -c "%x" file ## show atime
stat -c "%y" file ## show mtime
stat -c "%z" file ## show metadata change time
stat -c "%w" file ## show birth time
